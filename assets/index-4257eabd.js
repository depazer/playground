const I={dependencyNodes:[],packedNodes:[],loopLinks:[],id:-1};importScripts(new URL("data:application/javascript;base64,Ly8gc3JjL3dvcmtlci9nZXRSZWdpc3RyeS50cwpmdW5jdGlvbiBwcm9taXNpZnlSZXF1ZXN0KHJlcXVlc3QpIHsKICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgcmVxdWVzdC5vbmNvbXBsZXRlID0gcmVxdWVzdC5vbnN1Y2Nlc3MgPSAoKSA9PiByZXNvbHZlKHJlcXVlc3QucmVzdWx0KTsKICAgIHJlcXVlc3Qub25hYm9ydCA9IHJlcXVlc3Qub25lcnJvciA9ICgpID0+IHJlamVjdChyZXF1ZXN0LmVycm9yKTsKICB9KTsKfQpmdW5jdGlvbiBjcmVhdGVTdG9yZShkYk5hbWUsIHN0b3JlTmFtZSkgewogIGNvbnN0IHJlcXVlc3QgPSBpbmRleGVkREIub3BlbihkYk5hbWUpOwogIHJlcXVlc3Qub251cGdyYWRlbmVlZGVkID0gKCkgPT4gcmVxdWVzdC5yZXN1bHQuY3JlYXRlT2JqZWN0U3RvcmUoc3RvcmVOYW1lKTsKICBjb25zdCBkYnAgPSBwcm9taXNpZnlSZXF1ZXN0KHJlcXVlc3QpOwogIHJldHVybiAodHhNb2RlLCBjYWxsYmFjaykgPT4gZGJwLnRoZW4oKGRiKSA9PiBjYWxsYmFjayhkYi50cmFuc2FjdGlvbihzdG9yZU5hbWUsIHR4TW9kZSkub2JqZWN0U3RvcmUoc3RvcmVOYW1lKSkpOwp9CnZhciByZWdpc3RyeVN0b3JlID0gY3JlYXRlU3RvcmUoImRlcGF6ZXIiLCAicmVnaXN0cnkiKTsKZnVuY3Rpb24gZ2V0KGtleSwgY3VzdG9tU3RvcmUgPSByZWdpc3RyeVN0b3JlKSB7CiAgcmV0dXJuIGN1c3RvbVN0b3JlKCJyZWFkb25seSIsIChzdG9yZSkgPT4gcHJvbWlzaWZ5UmVxdWVzdChzdG9yZS5nZXQoa2V5KSkpOwp9CmZ1bmN0aW9uIHNldChrZXksIHZhbHVlLCBjdXN0b21TdG9yZSA9IHJlZ2lzdHJ5U3RvcmUpIHsKICByZXR1cm4gY3VzdG9tU3RvcmUoInJlYWR3cml0ZSIsIChzdG9yZSkgPT4gewogICAgc3RvcmUucHV0KHZhbHVlLCBrZXkpOwogICAgcmV0dXJuIHByb21pc2lmeVJlcXVlc3Qoc3RvcmUudHJhbnNhY3Rpb24pOwogIH0pOwp9CmZ1bmN0aW9uIGRlbChrZXksIGN1c3RvbVN0b3JlID0gcmVnaXN0cnlTdG9yZSkgewogIHJldHVybiBjdXN0b21TdG9yZSgicmVhZHdyaXRlIiwgKHN0b3JlKSA9PiB7CiAgICBzdG9yZS5kZWxldGUoa2V5KTsKICAgIHJldHVybiBwcm9taXNpZnlSZXF1ZXN0KHN0b3JlLnRyYW5zYWN0aW9uKTsKICB9KTsKfQphc3luYyBmdW5jdGlvbiBnZXRSZWdpc3RyeShkZXBlbmRlbmN5LCB2ZXJzaW9uID0gImxhdGVzdCIpIHsKICBjb25zdCBoYXNDYWNoZSA9IGF3YWl0IGdldENhY2hlKGAke2RlcGVuZGVuY3l9QCR7dmVyc2lvbn1gKTsKICBpZiAoaGFzQ2FjaGUpCiAgICByZXR1cm4gaGFzQ2FjaGU7CiAgY29uc3QgdXJsID0gYGh0dHBzOi8vcmVnaXN0cnkubnBtbWlycm9yLmNvbS8ke2RlcGVuZGVuY3l9LyR7dmVyc2lvbn1gOwogIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCwgewogICAgbWV0aG9kOiAiR0VUIiwKICAgIGhlYWRlcnM6IHsKICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfSwKICAgIGNhY2hlOiAibm8tY2FjaGUiCiAgfSkuY2F0Y2goKGVycikgPT4gZXJyKTsKICBjb25zdCBkZWZhdWx0UmVnaXN0cnkgPSB7CiAgICBuYW1lOiBkZXBlbmRlbmN5LAogICAgdmVyc2lvbiwKICAgIGRlcGVuZGVuY2llczoge30sCiAgICBkZXZEZXBlbmRlbmNpZXM6IHt9CiAgfTsKICBpZiAoIXJlcy5vaykKICAgIHJldHVybiBkZWZhdWx0UmVnaXN0cnk7CiAgY29uc3QgcmVnaXN0cnkgPSBhd2FpdCByZXMuanNvbigpOwogIHNldENhY2hlKGRlcGVuZGVuY3ksIHZlcnNpb24sIHJlZ2lzdHJ5LCBkZWZhdWx0UmVnaXN0cnkpOwogIHJldHVybiB7CiAgICBuYW1lOiBkZXBlbmRlbmN5LAogICAgdmVyc2lvbiwKICAgIGRlcGVuZGVuY2llczoge30sCiAgICBkZXZEZXBlbmRlbmNpZXM6IHt9LAogICAgLi4ucmVnaXN0cnkKICB9Owp9CmFzeW5jIGZ1bmN0aW9uIGdldENhY2hlKGtleSkgewogIGNvbnN0IGhhc0NhY2hlID0gYXdhaXQgZ2V0KGtleSk7CiAgaWYgKGhhc0NhY2hlKSB7CiAgICBpZiAoaGFzQ2FjaGUudHRsID09PSB2b2lkIDApCiAgICAgIHJldHVybiBoYXNDYWNoZTsKICAgIGlmIChoYXNDYWNoZS50dGwgPiBEYXRlLm5vdygpKQogICAgICByZXR1cm4gaGFzQ2FjaGUucmVnaXN0cnk7CiAgICBlbHNlCiAgICAgIGRlbChrZXkpOwogIH0KfQpmdW5jdGlvbiBzZXRDYWNoZShkZXBlbmRlbmN5LCB2ZXJzaW9uLCByZWdpc3RyeSwgZGVmYXVsdFJlZ2lzdHJ5LCB0dGwgPSAxZTMgKiA2MCAqIDUpIHsKICB2ZXJzaW9uICE9PSAiIiAmJiBzZXQoYCR7ZGVwZW5kZW5jeX1AJHtyZWdpc3RyeS52ZXJzaW9ufWAsIHsKICAgIC4uLmRlZmF1bHRSZWdpc3RyeSwKICAgIC4uLnJlZ2lzdHJ5CiAgfSk7CiAgaWYgKHZlcnNpb24gIT09IHJlZ2lzdHJ5LnZlcnNpb24pIHsKICAgIHNldChgJHtkZXBlbmRlbmN5fUAke3ZlcnNpb259YCwgewogICAgICB0dGw6IERhdGUubm93KCkgKyB0dGwsCiAgICAgIHJlZ2lzdHJ5OiB7CiAgICAgICAgLi4uZGVmYXVsdFJlZ2lzdHJ5LAogICAgICAgIC4uLnJlZ2lzdHJ5CiAgICAgIH0KICAgIH0pOwogIH0KfQo=",self.location),new URL("data:application/javascript;base64,Ly8gc3JjL3dvcmtlci9kZXBzRGlncmFwaC50cwpmdW5jdGlvbiBnZW5lcmF0ZURpZ3JhcGhXaXRoTGluayhpZCwgcm9vdERlcGVuZGVuY3ksIGdsb2JhbERhdGEpIHsKICBjb25zdCBub2RlcyA9IGdsb2JhbERhdGEuZGVwZW5kZW5jeU5vZGVzOwogIGNvbnN0IGlzUm9vdCA9IHJvb3REZXBlbmRlbmN5ID09PSAiIjsKICBjb25zdCByb290Tm9kZSA9IGlzUm9vdCA/IG5vZGVzWzBdIDogbm9kZXMuZmluZCgoeyBuYW1lIH0pID0+IG5hbWUgPT09IHJvb3REZXBlbmRlbmN5KTsKICBjb25zdCBmaWx0ZXJlZE5vZGVzID0gW107CiAgY29uc3QgbGlua3MgPSBbXTsKICBjb25zdCBtYXJrZWRTZXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpOwogIHJvb3ROb2RlICYmIGdlbmVyYXRlU3ViTW9kdWxlKHJvb3ROb2RlKTsKICBmdW5jdGlvbiBnZW5lcmF0ZVN1Yk1vZHVsZShyb290Tm9kZTIpIHsKICAgIG1hcmtlZFNldC5hZGQocm9vdE5vZGUyLm5hbWUpOwogICAgZmlsdGVyZWROb2Rlcy5wdXNoKHJvb3ROb2RlMik7CiAgICBsaW5rcy5wdXNoKC4uLmdlbmVyYXRlTm9kZUxpbmsocm9vdE5vZGUyLm5hbWUsIHJvb3ROb2RlMi5kZXBlbmRlbmNpZXMsIGdsb2JhbERhdGEpKTsKICAgIHJvb3ROb2RlMi5kZXBlbmRlbmNpZXMuZm9yRWFjaCgobmFtZSkgPT4gewogICAgICAhbWFya2VkU2V0LmhhcyhuYW1lKSAmJiAhZ2xvYmFsRGF0YS5wYWNrZWROb2Rlcy5pbmNsdWRlcyhyb290Tm9kZTIubmFtZSkgJiYgZ2VuZXJhdGVTdWJNb2R1bGUobm9kZXMuZmluZCgobm9kZSkgPT4gbm9kZS5uYW1lID09PSBuYW1lKSk7CiAgICB9KTsKICB9CiAgaWYgKGdsb2JhbERhdGEuaWQgPT09IGlkKQogICAgc2VsZi5wb3N0TWVzc2FnZSh7CiAgICAgIGlkLAogICAgICB0eXBlOiAwLAogICAgICBkYXRhOiB7CiAgICAgICAgbm9kZXM6IGZpbHRlcmVkTm9kZXMsCiAgICAgICAgbGlua3MKICAgICAgfQogICAgfSk7CiAgZWxzZQogICAgcmV0dXJuOwp9CmZ1bmN0aW9uIGdlbmVyYXRlTm9kZUxpbmsoc291cmNlLCBkZXBlbmRlbmNpZXMsIGdsb2JhbERhdGEpIHsKICBpZiAoZ2xvYmFsRGF0YS5wYWNrZWROb2Rlcy5pbmNsdWRlcyhzb3VyY2UpKQogICAgcmV0dXJuIFtdOwogIHJldHVybiBkZXBlbmRlbmNpZXMubWFwKCh0YXJnZXQpID0+IHsKICAgIGNvbnN0IHRhcmdldE5vZGUgPSBnbG9iYWxEYXRhLmRlcGVuZGVuY3lOb2Rlcy5maW5kKChub2RlKSA9PiBub2RlLm5hbWUgPT09IHRhcmdldCk7CiAgICByZXR1cm4gewogICAgICBzb3VyY2UsCiAgICAgIHRhcmdldCwKICAgICAgbGlua0NvbG9yOiBjYWxjTGlua0NvbG9yKAogICAgICAgICh0YXJnZXROb2RlID09IG51bGwgPyB2b2lkIDAgOiB0YXJnZXROb2RlLmlzRGV2RGVwZW5kZW5jeSkgPz8gZmFsc2UsCiAgICAgICAgZ2xvYmFsRGF0YS5sb29wTGlua3MuaW5jbHVkZXMoYCR7c291cmNlfS0+JHt0YXJnZXR9YCkKICAgICAgKQogICAgfTsKICB9KTsKfQpmdW5jdGlvbiBjYWxjTGlua0NvbG9yKGlzRGV2LCBpc0xvb3ApIHsKICBjb25zdCBjb2xvck1hcCA9IHsKICAgICIwMCI6ICIjYzc5MmNlIiwKICAgICIwMSI6ICIjZmY1MzZkIiwKICAgICIxMSI6ICIjZmY1MzZkIiwKICAgICIxMCI6ICIjODJhYWUwIgogIH07CiAgcmV0dXJuIGNvbG9yTWFwW2Akeytpc0Rldn0keytpc0xvb3B9YF07Cn0K",self.location));importScripts(new URL("data:application/javascript;base64,Ly8gc3JjL3dvcmtlci9nZW5lcmF0ZVZpcnR1YWxEZXBlbmRlbmN5LnRzCmZ1bmN0aW9uIHBhcnNlRGVwZW5kZW5jeUlEKGlkKSB7CiAgY29uc3QgdmVyc2lvbiA9IGlkLnNwbGl0KCJAIikucG9wKCk7CiAgY29uc3QgZGVwZW5kZW5jeSA9IGlkLnNwbGl0KCJAIikuc2xpY2UoMCwgLTEpLmpvaW4oIkAiKTsKICByZXR1cm4gW2RlcGVuZGVuY3ksIHZlcnNpb25dOwp9CmZ1bmN0aW9uIGdlbmVyYXRlVG1wTm9kZShub2RlcywgZGVwdGgsIG5vZGVTZXQpIHsKICByZXR1cm4gbm9kZXMucmVkdWNlKCh0bXBOb2RlcywgbmFtZSkgPT4gewogICAgaWYgKG5vZGVTZXQuaGFzKG5hbWUpKQogICAgICByZXR1cm4gdG1wTm9kZXM7CiAgICB0bXBOb2Rlcy5wdXNoKHsKICAgICAgbmFtZSwKICAgICAgZGVwdGgsCiAgICAgIGlzRGV2RGVwZW5kZW5jeTogZmFsc2UsCiAgICAgIGRlcGVuZGVuY2llczogW10KICAgIH0pOwogICAgcmV0dXJuIHRtcE5vZGVzOwogIH0sIFtdKTsKfQphc3luYyBmdW5jdGlvbiBnZXRSZW1vdGVEZXBlbmRlbmN5Tm9kZShkZXB0aCwgcm9vdERlcGVuZGVuY3ksIGlzRGV2RGVwZW5kZW5jeSwgdmVyc2lvbiA9ICJsYXRlc3QiLCBpbmNsdWRlRGV2RGVwZW5kZW5jaWVzID0gZmFsc2UpIHsKICBjb25zdCB7CiAgICB2ZXJzaW9uOiBjdXJyZW50VmVyc2lvbiwKICAgIGRlcGVuZGVuY2llcywKICAgIGRldkRlcGVuZGVuY2llcwogIH0gPSBhd2FpdCBnZXRSZWdpc3RyeShyb290RGVwZW5kZW5jeSwgdmVyc2lvbik7CiAgY29uc3QgbWVyZ2VkRGVwZW5kZW5jaWVzID0gewogICAgLi4uZGVwZW5kZW5jaWVzID8/IHt9LAogICAgLi4uZGV2RGVwZW5kZW5jaWVzID09PSB2b2lkIDAgfHwgIWluY2x1ZGVEZXZEZXBlbmRlbmNpZXMgPyB7fSA6IGRldkRlcGVuZGVuY2llcwogIH07CiAgY29uc3QgZGVwZW5kZW5jaWVzTm9kZU5hbWVzID0gYXdhaXQgUHJvbWlzZS5hbGwoCiAgICBPYmplY3QuZW50cmllcyhtZXJnZWREZXBlbmRlbmNpZXMpLm1hcChhc3luYyAoW25hbWUsIHZlcnNpb24yXSkgPT4gewogICAgICBjb25zdCByZWdpc3RyeSA9IGF3YWl0IGdldFJlZ2lzdHJ5KG5hbWUsIHZlcnNpb24yKTsKICAgICAgcmV0dXJuIGAke25hbWV9QCR7cmVnaXN0cnkudmVyc2lvbn1gOwogICAgfSkKICApOwogIHJldHVybiB7CiAgICBuYW1lOiBgJHtyb290RGVwZW5kZW5jeX1AJHtjdXJyZW50VmVyc2lvbn1gLAogICAgZGVwdGgsCiAgICBpc0RldkRlcGVuZGVuY3ksCiAgICBkZXBlbmRlbmNpZXM6IGRlcGVuZGVuY2llc05vZGVOYW1lcwogIH07Cn0KYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVWaXJ0dWFsRGVwZW5kZW5jeU5vZGVzKGlkLCByb290RGVwZW5kZW5jeUlELCBtYXhEZXB0aCwgZ2xvYmFsRGF0YSwgaW5jbHVkZURldkRlcGVuZGVuY2llcyA9IGZhbHNlKSB7CiAgY29uc3Qgbm9kZU1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7CiAgY29uc3Qgbm9kZVNldCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7CiAgY29uc3Qgbm9kZXMgPSBbXTsKICBjb25zdCB3YWl0ZWREZXBlbmRlbmN5ID0gewogICAgd2FpdGVkTm9kZXM6IFtdLAogICAgbmV4dE5vZGVzOiBbXQogIH07CiAgY29uc3QgW3Jvb3REZXBlbmRlbmN5LCB2ZXJzaW9uXSA9IHBhcnNlRGVwZW5kZW5jeUlEKHJvb3REZXBlbmRlbmN5SUQpOwogIGNvbnN0IHJvb3REZXBlbmRlbmN5Tm9kZSA9IGF3YWl0IGdldFJlbW90ZURlcGVuZGVuY3lOb2RlKAogICAgMCwKICAgIHJvb3REZXBlbmRlbmN5LAogICAgZmFsc2UsCiAgICB2ZXJzaW9uLAogICAgaW5jbHVkZURldkRlcGVuZGVuY2llcwogICk7CiAgbm9kZVNldC5hZGQocm9vdERlcGVuZGVuY3lOb2RlLm5hbWUpOwogIG5vZGVNYXAuc2V0KHJvb3REZXBlbmRlbmN5Tm9kZS5uYW1lLCAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbdmVyc2lvbl0pKTsKICBub2Rlcy5wdXNoKHJvb3REZXBlbmRlbmN5Tm9kZSk7CiAgaWYgKGdsb2JhbERhdGEuaWQgPT09IGlkKSB7CiAgICBnbG9iYWxEYXRhLmRlcGVuZGVuY3lOb2RlcyA9IFtub2Rlc1swXSwgLi4uZ2VuZXJhdGVUbXBOb2RlKG5vZGVzWzBdLmRlcGVuZGVuY2llcywgMSwgbm9kZVNldCldOwogICAgZ2xvYmFsRGF0YS5sb29wTGlua3MgPSBbXTsKICAgIGdlbmVyYXRlRGlncmFwaFdpdGhMaW5rKGlkLCByb290RGVwZW5kZW5jeU5vZGUubmFtZSwgZ2xvYmFsRGF0YSk7CiAgfQogIHdhaXRlZERlcGVuZGVuY3kud2FpdGVkTm9kZXMucHVzaCguLi5yb290RGVwZW5kZW5jeU5vZGUuZGVwZW5kZW5jaWVzKTsKICBsZXQgZGVwdGggPSAwOwogIHdoaWxlICgrK2RlcHRoIDwgbWF4RGVwdGggJiYgZ2xvYmFsRGF0YS5pZCA9PT0gaWQgJiYgd2FpdGVkRGVwZW5kZW5jeS53YWl0ZWROb2Rlcy5sZW5ndGgpIHsKICAgIGNvbnN0IG5leHROb2Rlc1Byb2Nlc3MgPSB3YWl0ZWREZXBlbmRlbmN5LndhaXRlZE5vZGVzLm1hcChhc3luYyAobmFtZSkgPT4gewogICAgICBpZiAobm9kZVNldC5oYXMobmFtZSkpCiAgICAgICAgcmV0dXJuOwogICAgICBjb25zdCBbZGVwZW5kZW5jeSwgdmVyc2lvbjJdID0gcGFyc2VEZXBlbmRlbmN5SUQobmFtZSk7CiAgICAgIGNvbnN0IGRlcGVuZGVuY3lOb2RlID0gYXdhaXQgZ2V0UmVtb3RlRGVwZW5kZW5jeU5vZGUoCiAgICAgICAgZGVwdGgsCiAgICAgICAgZGVwZW5kZW5jeSwKICAgICAgICBmYWxzZSwKICAgICAgICB2ZXJzaW9uMiwKICAgICAgICBpbmNsdWRlRGV2RGVwZW5kZW5jaWVzCiAgICAgICk7CiAgICAgIG5vZGVzLnB1c2goZGVwZW5kZW5jeU5vZGUpOwogICAgICBub2RlU2V0LmFkZChkZXBlbmRlbmN5Tm9kZS5uYW1lKTsKICAgICAgd2FpdGVkRGVwZW5kZW5jeS5uZXh0Tm9kZXMucHVzaCguLi5kZXBlbmRlbmN5Tm9kZS5kZXBlbmRlbmNpZXMpOwogICAgfSk7CiAgICBhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQobmV4dE5vZGVzUHJvY2Vzcyk7CiAgICBpZiAoZ2xvYmFsRGF0YS5pZCA9PT0gaWQpIHsKICAgICAgZ2xvYmFsRGF0YS5kZXBlbmRlbmN5Tm9kZXMgPSBbCiAgICAgICAgLi4ubm9kZXMsCiAgICAgICAgLi4uZ2VuZXJhdGVUbXBOb2RlKHdhaXRlZERlcGVuZGVuY3kubmV4dE5vZGVzLCBkZXB0aCArIDEsIG5vZGVTZXQpCiAgICAgIF07CiAgICAgIGdsb2JhbERhdGEubG9vcExpbmtzID0gW107CiAgICAgIHNlbGYucG9zdE1lc3NhZ2UoewogICAgICAgIHR5cGU6IDEsCiAgICAgICAgaWQsCiAgICAgICAgZGF0YTogZ2xvYmFsRGF0YS5kZXBlbmRlbmN5Tm9kZXMKICAgICAgfSk7CiAgICB9CiAgICB3YWl0ZWREZXBlbmRlbmN5LndhaXRlZE5vZGVzID0gWy4uLm5ldyBTZXQod2FpdGVkRGVwZW5kZW5jeS5uZXh0Tm9kZXMpXTsKICAgIHdhaXRlZERlcGVuZGVuY3kubmV4dE5vZGVzID0gW107CiAgfQp9Cg==",self.location));self.onmessage=Z=>{I.id=Z.data.id;const{type:l,data:g}=Z.data;switch(l){case 0:I.dependencyNodes=g.dependency.dependencyNodes,I.loopLinks=G(g.dependency.loopDependencies),I.packedNodes=g.packedNodes,generateDigraphWithLink(I.id,g.rootDependency,I);break;case 1:generateVirtualDependencyNodes(I.id,g.rootDependency,g.depth,I);break}};function G(Z){const l=new Set;for(const g of Z)for(const[C,b]of g.slice(1).entries())l.add(`${g[C]}->${b}`);return[...l]}
